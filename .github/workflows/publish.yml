on:
  push: { tags: ['[0-9]+.[0-9]+.[0-9]+'] }

name: Publish

jobs:
  prepare_artifacts_linux:
    name: Prepare Artifacts (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Extract Version
        id: extract_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Install Linux Packages
        run: scripts/install_packages_linux.sh

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bins --release

      - name: Package Artifacts
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
        run: scripts/publish_prepare_app.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: linux-x86_64
          path: target/publish/app

  publish_itch_io_linux:
    name: Publish to itch.io (Linux)
    needs: prepare_artifacts_linux
    runs-on: ubuntu-latest
    if: success()
    timeout-minutes: 15
    steps:
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v1
        with:
          name: linux-x86_64
          path: target/publish/app

      - name: Extract Version
        id: extract_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: linux-x86_64
          ITCH_GAME: will
          ITCH_USER: azriel91
          PACKAGE: target/publish/app/will
          VERSION: ${{ steps.extract_version.outputs.version }}

      - uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: linux-x86_64-server
          ITCH_GAME: will
          ITCH_USER: azriel91
          PACKAGE: target/publish/app/session_server
          VERSION: ${{ steps.extract_version.outputs.version }}

  prepare_artifacts_windows:
    name: Prepare Artifacts (Windows)
    runs-on: windows-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Extract Version
        id: extract_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bins --release

      - name: Package Artifacts
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
        run: scripts/publish_prepare_app.bat
        shell: cmd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-x86_64
          path: target/publish/app

  publish_itch_io_windows:
    name: Publish to itch.io (Windows)
    needs: prepare_artifacts_windows
    runs-on: windows-latest
    if: success()
    timeout-minutes: 15
    steps:
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v1
        with:
          name: windows-x86_64
          path: target/publish/app

      - name: Extract Version
        id: extract_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows-x86_64
          ITCH_GAME: will
          ITCH_USER: azriel91
          PACKAGE: target/publish/app/will
          VERSION: ${{ steps.extract_version.outputs.version }}

      - uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows-x86_64-server
          ITCH_GAME: will
          ITCH_USER: azriel91
          PACKAGE: target/publish/app/session_server
          VERSION: ${{ steps.extract_version.outputs.version }}
