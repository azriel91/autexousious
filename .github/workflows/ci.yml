on: [pull_request]

name: CI

jobs:
  # audit:
  #   name: Audit
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions-rs/audit-check@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  # license:
  #   name: License Conformance
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - run: scripts/conformance_license.sh

  # fmt:
  #   name: Rustfmt
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         override: true
  #         components: rustfmt

  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --all -- --check

  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         components: clippy

  #     - name: Install Clippy
  #       run: rustup component add clippy

  #     - name: Install Linux Packages
  #       run: scripts/install_packages_linux.sh

  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings

  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Linux Packages
        run: scripts/install_packages_linux_ci.sh

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --release

      - name: Run Tests
        run: >-
          /usr/bin/xvfb-run
          --auto-servernum
          --server-args="-screen 0 1280x1024x24+32 -pixdepths 3 27 32 -ac +extension GLX +render -noreset"
          cargo test --workspace --tests --release

  # build_windows:
  #   name: Build (Windows)
  #   runs-on: windows-latest
  #   timeout-minutes: 45
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true

  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #         args: --all-targets --release

  # build_wasm:
  #   name: Build (WASM)
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 45
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         override: true
  #         target: wasm32-unknown-unknown
  #         components: rust-src

  #     - name: Install Linux Packages
  #       run: scripts/install_packages_linux.sh

  #     - uses: actions-rs/install@v0.1
  #       with:
  #         crate: wasm-bindgen-cli
  #         version: latest

  #     - name: Build WASM
  #       run: scripts/build_wasm.sh
