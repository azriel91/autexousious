on: [pull_request]

name: CI

jobs:
  audit:
    name: Audit
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  license:
    name: License Conformance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: scripts/conformance_license.sh

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Install Clippy
        run: rustup component add clippy

      - name: Install Linux Packages
        run: scripts/install_packages_linux.sh

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Linux Packages
        run: scripts/install_packages_linux_ci.sh

      - name: Prepare Test Environment
        run: 'sudo bash -c ''echo -e "pcm.!default {\n    type plug\n    slave.pcm \"null\"\n}" > /etc/asound.conf'' && sudo usermod -aG audio $USER'

      - name: Build And Test
        env:
          AMETHYST_LOG_LEVEL_FILTER: WARN
        run: >-
          /usr/bin/xvfb-run
          --auto-servernum
          --server-args="-screen 0 1280x1024x24+32 -pixdepths 3 27 32 -ac +extension GLX +render -noreset"
          cargo test --workspace --tests --bins --release

      - name: Package Artifacts
        run: scripts/publish_prepare_app.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: linux-x86_64
          path: target/publish/app

  build_windows:
    name: Build (Windows)
    runs-on: windows-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --tests --bins --release

      - name: Package Artifacts
        run: scripts/publish_prepare_app.bat
        shell: cmd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: windows-x86_64
          path: target/publish/app

  build_wasm:
    name: Build (WASM)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
          components: rust-src

      - name: Install Linux Packages
        run: scripts/install_packages_linux.sh

      - uses: actions-rs/install@v0.1
        with:
          crate: wasm-bindgen-cli
          version: latest

      - name: Build WASM
        run: scripts/build_wasm.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: wasm32
          path: pkg
