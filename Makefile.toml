[tasks.conformance]
description = '''
Ensures the repository conforms to coding best practices, and only depends on libraries with
permissive licenses
'''
script = [
'''
set -e

if rustc --version | grep -qF 'nightly'; then
    # Rust fmt
    cargo fmt --all

    # Clippy - best practices
    [ "${CLIPPY_ENABLED}" = "false" ] || cargo clippy --all
fi

# Security vulnerability
# TODO: re-enable after `specs` is upgraded in Amethyst
cargo audit

# License compatibility
./scripts/conformance_license.sh
'''
]

[tasks.maintain]
description = '''
Performs the following code maintenance tasks:

* Format code: `cargo fmt --all`
* Update dependencies: `cargo update`
* Update dependencies: `cargo upgrade`
* Check for outdated dependencies: `cargo outdated`
'''
dependencies = [
    "workspace-format",
    "workspace-dependencies-update",
    "workspace-dependencies-upgrade",
    "workspace-outdated"
]

# === workspace-format === #

[tasks.workspace-format]
dependencies = [
    "workspace-format-pre",
    "workspace-format-do",
    "workspace-format-post"
]

[tasks.workspace-format-pre]
dependencies = ["ensure-repository-clean"]

[tasks.workspace-format-do]
script = [
'''
set +x
. ./scripts/log.sh
notice "Running \`cargo fmt --all\`"
cargo fmt --all
'''
]

[tasks.workspace-format-post]
script = [
'''
set +x
. ./scripts/log.sh

if [ -n "$(git status --porcelain)" ]; then
    git commit -am "Format repository with Rustfmt."
    notice "Formatted repository and committed changes."
fi
'''
]

# === workspace-dependencies-update === #

[tasks.workspace-dependencies-update]
dependencies = [
    "workspace-dependencies-update-pre",
    "workspace-dependencies-update-do",
    "workspace-dependencies-update-post"
]

[tasks.workspace-dependencies-update-pre]
dependencies = ["ensure-repository-clean"]

[tasks.workspace-dependencies-update-do]
script = [
'''
set +x
. ./scripts/log.sh
notice "Running \`cargo update\`"
cargo update
'''
]

[tasks.workspace-dependencies-update-post]
script = [
'''
set +x
. ./scripts/log.sh

if [ -n "$(git status --porcelain)" ]; then
    git commit -am "Updated workspace dependencies"
    notice "Updated workspace dependencies and committed changes."
    info "Remember to run \`cargo test\` before pushing."
fi
'''
]

# === workspace-dependencies-upgrade === #

[tasks.workspace-dependencies-upgrade]
dependencies = [
    "workspace-dependencies-upgrade-pre",
    "workspace-dependencies-upgrade-do",
    "workspace-dependencies-upgrade-post"
]

[tasks.workspace-dependencies-upgrade-pre]
dependencies = ["ensure-repository-clean"]

[tasks.workspace-dependencies-upgrade-do]
script = [
'''
set +x
. ./scripts/log.sh
notice "Running \`cargo upgrade --all\`"
cargo upgrade --all
'''
]

[tasks.workspace-dependencies-upgrade-post]
script = [
'''
set +x
. ./scripts/log.sh

if [ -n "$(git status --porcelain)" ]; then
    git commit -am "Upgraded workspace dependencies"
    notice "Upgraded workspace dependencies and committed changes."
    info "Remember to run \`cargo test\` before pushing."
fi
'''
]

# === workspace-outdated === #

[tasks.workspace-outdated]
dependencies = [
    "workspace-outdated-pre",
    "workspace-outdated-do",
    "workspace-outdated-post"
]

[tasks.workspace-outdated-pre]

[tasks.workspace-outdated-do]
description = "Runs verify-outdated cargo plugin."
condition = { env = { "CARGO_MAKE_CRATE_HAS_DEPENDENCIES" = "TRUE" } }
script = [
'''
set +x
. ./scripts/log.sh
notice "Running \`cargo outdated -w --root-deps-only --exit-code 1\`"
if ! cargo outdated -w --root-deps-only --exit-code 1; then
    warn "There are outdated dependencies. Please upgrade them as soon as possible."
fi
'''
]

[tasks.workspace-outdated-post]

# === common === #

[tasks.ensure-repository-clean]
script = [
'''
set +x
. ./scripts/log.sh
[ -z "$(git status --porcelain)" ] || error "Ensure the workspace is clean before running this task"
'''
]
